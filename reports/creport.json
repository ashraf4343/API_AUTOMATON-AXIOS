{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-24T17:28:58.441Z",
    "end": "2023-10-24T17:28:59.214Z",
    "duration": 773,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "be5c72d5-38c6-4855-8350-69453a5e2618",
      "title": "",
      "fullFile": "C:\\projects\\API_AUTOMATION_AXIOS\\UserAPI.js",
      "file": "\\UserAPI.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d218f6a-451c-49dc-96f5-a1b119d45c4d",
          "title": "Customer API integration testing",
          "fullFile": "C:\\projects\\API_AUTOMATION_AXIOS\\UserAPI.js",
          "file": "\\UserAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User can login successfully",
              "fullTitle": "Customer API integration testing User can login successfully",
              "timedOut": false,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.post(`${jsonObj.baseUrl}/user/login`, {\n    \"email\": \"salman@roadtocareer.net\",\n    \"password\": \"1234\"\n}, {\n    headers: {\n        'Content-Type': 'application/json'\n    }\n}).then((res) => res.data);\nconsole.log(response);\nfs.writeFileSync('env.json', JSON.stringify({\n    ...jsonObj, token: response.token\n}))",
              "err": {},
              "uuid": "574fa85d-53f0-4cdc-b66d-2b16bf2a192f",
              "parentUUID": "5d218f6a-451c-49dc-96f5-a1b119d45c4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create new user",
              "fullTitle": "Customer API integration testing Create new user",
              "timedOut": false,
              "duration": 315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.post(`${jsonObj.baseUrl}/user/create`, {\n    \"name\": faker.person.fullName(),\n    \"email\": faker.internet.email(),\n    \"password\": \"123334\",\n    \"phone_number\": `01501${randomId(100000, 999999)}`,\n    \"nid\": \"123456789\",\n    \"role\": \"Customer\"\n}, {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': jsonObj.token,\n        'X-AUTH-SECRET-KEY': jsonObj.secretKey\n    }\n}).then((res) => res.data);\nconsole.log(response);\nexpect(response.message).contains(\"User created\")\nlet newUserObj = {\n    id: response.user.id,\n    name: response.user.name,\n    email: response.user.email,\n    phone_number: response.user.phone_number,\n    role: response.user.role\n\n}\nuserObj.push(newUserObj);\nfs.writeFileSync('./Users.json', JSON.stringify(userObj));",
              "err": {},
              "uuid": "76927911-3e19-44c5-ab31-72628dd558ae",
              "parentUUID": "5d218f6a-451c-49dc-96f5-a1b119d45c4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search User by id",
              "fullTitle": "Customer API integration testing Search User by id",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(`${jsonObj.baseUrl}/user/search/id/${userObj[userObj.length-1].id}`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': jsonObj.token,\n                'X-AUTH-SECRET-KEY': jsonObj.secretKey\n            }\n        }).then((res) => res.data);\n        console.log(response);\n        expect(response.message).contains(\"User found\")",
              "err": {},
              "uuid": "21b0a199-7fdd-44b4-b8dd-721cdfc1d1b2",
              "parentUUID": "5d218f6a-451c-49dc-96f5-a1b119d45c4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "574fa85d-53f0-4cdc-b66d-2b16bf2a192f",
            "76927911-3e19-44c5-ab31-72628dd558ae",
            "21b0a199-7fdd-44b4-b8dd-721cdfc1d1b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 760,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "creport.html",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "creport.html"
      },
      "version": "6.2.0"
    }
  }
}